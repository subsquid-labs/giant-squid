type Account @entity {
  id: ID!
  totalBond: BigInt!
  totalReward: BigInt!
  totalSlash: BigInt!
  transfers: [AccountTransfer!] @derivedFrom(field: "account")
  contributions: [Contribution!] @derivedFrom(field: "account")
  rewards: [Reward!] @derivedFrom(field: "account")
  slashes: [Slash!] @derivedFrom(field: "account")
  bonds: [Bond!] @derivedFrom(field: "account")
  chain: Chain!
  stakingInfo: StakingInfo
  lastUpdateBlock: BigInt!
}

type StakingInfo {
  payee: String
  payeeAccount: String
  controller: String
}

type Chain @entity {
  id: ID! #chain name
  token: Token!
  paraId: Int
  crowdloans: [Crowdloan!] @derivedFrom(field: "parachain")
  relayChain: Chain
}

type Token {
  symbol: String
  decimals: Int
}

enum CrowdloanStatus {
  CREATED
  WON
  DISSOLVED
}

enum TransferDicrection {
  FROM
  TO
}

type Contributor @entity {
  id: ID!
  crowdloan: Crowdloan!
  account: Account!
  amount: BigInt!
}

type Crowdloan @entity {
  id: ID!
  cap: BigInt!
  firstPeriod: BigInt!
  lastPeriod: BigInt!
  end: BigInt!
  contributors: [Contributor!] @derivedFrom(field: "crowdloan")
  raised: BigInt!
  parachain: Chain
  chain: Chain! #relay
  blockNumber: BigInt @index
}

interface Item {
  date: DateTime
  blockNumber: BigInt
  extrinsicHash: String
  chain: Chain!
  amount: BigInt
}

interface HasTotal {
  total: BigInt
}

interface HasEra {
  era: Int
}

interface CanFail {
  success: Boolean
}

type Contribution implements Item & CanFail @entity {
  id: ID!
  chain: Chain!
  date: DateTime
  blockNumber: BigInt @index
  extrinsicHash: String @index
  crowdloan: Crowdloan!
  success: Boolean @index
  account: Account!
  amount: BigInt
}

type Transfer implements Item & CanFail @entity {
  id: ID!
  chain: Chain!
  date: DateTime
  blockNumber: BigInt @index
  extrinsicHash: String @index
  to: Account!
  from: Account!
  amount: BigInt
  success: Boolean @index
  name: String
}

type AccountTransfer @entity {
  id: ID!
  transfer: Transfer
  account: Account!
  direction: TransferDicrection
}

type Reward implements Item & HasTotal & HasEra @entity  {
  id: ID!
  chain: Chain!
  date: DateTime
  blockNumber: BigInt @index
  extrinsicHash: String @index
  account: Account!
  amount: BigInt
  era: Int
  validator: String
  total: BigInt
  name: String
}

type Slash implements Item & HasTotal & HasEra @entity  {
  id: ID!
  chain: Chain!
  date: DateTime
  blockNumber: BigInt @index
  extrinsicHash: String @index
  account: Account!
  amount: BigInt
  era: Int
  total: BigInt
  name: String
}

enum BondType {
  Bond
  Unbond
}

type Bond implements Item & HasTotal & CanFail @entity  {
  id: ID!
  chain: Chain!
  date: DateTime
  blockNumber: BigInt @index
  extrinsicHash: String @index
  account: Account!
  amount: BigInt
  total: BigInt
  success: Boolean @index
  type: BondType
  name: String
}
